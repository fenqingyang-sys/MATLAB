# fenqingyang-sys.github.io
function varargout=tsp_ga(xy,dmat,popsize,numiter,showprog,showresult)
nargs=6;
xy=16*rand(60,2);%输入待求城市坐标即可
for k=nargin:nargs-1
    switch k
        case 0
            xy=10*rand(50,2);
        case 1
            N=size(xy,1);
            a=meshgrid(1:N);
            dmat=reshape(sqrt(sum((xy(a,:)-xy(a',:)).^2,2)),N,N);
        case 2
            popsize=100;
        case 3
            numiter=1e4;
        case 4
            showprog=1;
        case 5
            showresult=1;
        otherwise
    end
end
[N,dims]=size(xy);
[nr,nc]=size(dmat);
if N~=nr ||N~=nc
    error('invalid xy or dmat inputs!')
end
n=N;
popsize=4*ceil(popsize/4);
numiter=max(1,round(real(numiter(1))));
showprog=logical(showprog(1));
showresult=logical(showresult(1));
pop=zeros(popsize,n);
pop(1,:)=(1:n);
for k=2:popsize
    pop(k,:)=randperm(n);
end
globalmin=inf;
totaldist=zeros(1,popsize);
dishistory=zeros(1,numiter);
tmppop=zeros(4,n);
newpop=zeros(popsize,n);
if showprog
    pfig=figure('name','tsp_ga|current best solution','numbertitle','off');
end
 for iter=1:numiter
     for p=1:popsize
         d=dmat(pop(p,n),pop(p,1));
         for k=2:n
             d=d+dmat(pop(p,k-1),pop(p,k));
         end
         totaldist(p)=d;
     end
     [mindist,index]=min(totaldist);
     disthistory(iter)=mindist;
     if mindist<globalmin
         globalmin=mindist;
         optroute=pop(index,:);
         if showprog
             figure(pfig);
             rte=optroute([1:n 1]);
             if dims>2
                 plot3(xy(rte,1),xy(rte,2),xy(rte,3),'r.-');
             else
                 plot(xy(rte,1),xy(rte,2),'r.-');
             end
             title(sprintf('total distance=%1.4f,iteration=%d',mindist,iter));
         end
     end
     randomorder=randperm(popsize);
     for p=4:4:popsize
         rtes=pop(randomorder(p-3:p),:);
         dists=totaldist(randomorder(p-3:p));
         [ignore,idx]=min(dists);
         bestof4route=rtes(idx,:);
         routeinsertionpoints=sort(ceil(n*rand(1,2)));
         i=routeinsertionpoints(1);
         j=routeinsertionpoints(2);
         for k=1:4
             tmppop(k,:)=bestof4route;
             switch k
                 case 2
                     tmppop(k,i:j)=tmppop(k,j:-1:i);
                 case 3
                     tmpop(k,[i j])=tmppop(k,[j i]);
                 case 4
                     tmppop(k,i:j)=tmppop(k,[i+1:j i]);
                 otherwise
             end
         end
         newpop(p-3:p,:)=tmppop;
     end
     pop=newpop;
 end
 if showresult
     figure('name','tsp_ga|results','numbertitle','off');
     figure(1),
     pclr=~get(0,'defaultaxescolor');
     if dims>2
         plot3(xy(:,1),xy(:,3),'.','color',pclr);
     else
         plot(xy(:,1),xy(:,2),'.','color',pclr);
     end
     title('城市位置');
     grid on
     subplot(2,2,2);
     figure(2),
     imagesc(dmat(optroute,optroute));
     title('距离矩阵');
     subplot(2,2,3);
     figure(3),
     rte=optroute([1:n 1]);
     if dims>2,
         plot3(xy(rte,1),xy(rte,2),xy(rte,3),'r.-');
     else
         plot(xy(rte,1),xy(rte,2),'r.-');
     end
     title(sprintf('最短距离=%1.4f',mindist));
     grid on
     subplot(2,2,4);
     figure(4),
     plot(dishistory,'b','linewidth',2);
     title('最短适应度曲线');
     grid on
     set(gca,'xlim',[0,numiter+1],'ylim',[0 1.1*max([1 dishistory])]);
 end
 if nargout
     varargout{1}=optroute;
     varargout{2}=mindist;
 end
     
     
             
             
             
     
